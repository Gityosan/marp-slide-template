/*! @theme base */

/*! @import 'default'; */
@import '//fonts.googleapis.com/css?family=Roboto+Condensed|BIZ+UDPGothic&display=swap';

:root {
  --main-color: #607d8b;
  --sub-color: #b0bec5;
  --accent-color: #78909c;
  --white: white;
  --black: #333;
  --grey: #9e9e9e;
  --h1-color: var(--black);
  --h2-color: var(--black);
  --h3-color: var(--black);
  --h4-color: var(--black);
  --h5-color: var(--black);
  --h6-color: var(--black);
  --heading-strong-color: var(--black);
  --header-footer-color: var(--black);
  --text-color: var(--black);
  --background-theme: var(--white);
  --background-code: #efefef;
  --background-code-border: #dcdcd5;
  --h1-font-size: 50px;
  --h2-font-size: 45px;
  --h3-font-size: 40px;
  --h4-font-size: 35px;
  --h5-font-size: 28px;
  --h6-font-size: 20px;
  --main-font-size: 20px;
  --header-footer-font-size: 16px;
  --normal-border-radius: 5px;
}

section {
  width: 100dvh;
  height: 100dvh;
  padding: 0 40px;
  font-size: var(--main-font-size);
  font-weight: 400;
  color: var(--text-color);
  background-color: var(--background-theme);

  header {
    position: absolute;
    top: 0;
    left: 40px;
    width: calc(100% - 80px);
    padding-bottom: 20px;
    font-size: var(--header-footer-font-size);
    color: var(--header-footer-color);

    &::before {
      display: inline-block;
      width: 4px;
      height: 60px;
      margin-right: 16px;
      margin-bottom: -4px;
      content: '';
      background-color: var(--text-color);
    }
  }

  footer {
    width: calc(100% - 80px);
    height: 50px;
    font-size: var(--header-footer-font-size);
    line-height: 50px;
    color: var(--header-footer-color);
    text-align: right;
  }

  &::after {
    position: absolute;
    right: 20px;
    bottom: 8px;
    font-family: 'Roboto Condensed', sans-serif;
    font-size: 28px;
    color: var(--header-footer-color);
  }

  h1 {
    font-size: var(--h1-font-size);
    font-weight: 700;
    color: var(--h1-color);
  }

  h2 {
    font-size: var(--h2-font-size);
    font-weight: 400;
    color: var(--h2-color);
  }

  h3 {
    font-size: var(--h3-font-size);
    font-weight: 400;
    color: var(--h3-color);
  }

  h4 {
    font-size: var(--h4-font-size);
    font-weight: 400;
    color: var(--h4-color);
  }

  h5 {
    font-size: var(--h5-font-size);
    font-weight: 400;
    color: var(--h5-color);
  }

  h6 {
    font-size: var(--h6-font-size);
    font-weight: 400;
    color: var(--h6-color);
  }

  p img {
    display: block;
    margin: 0 auto;
    border-radius: 4px;
  }

  // for code block
  pre {
    padding: 8px;
    margin: 4px 0;
    overflow: visible;
    white-space: pre-wrap;
    background-color: var(--background-code);
    border: 1px solid var(--background-code-border);
    border-radius: 4px;

    code {
      padding: 4px 8px;
      color: var(--black);
      background-color: var(--background-code);
      border-radius: 4px;

      &.language-txt {
        color: var(--black);
      }
    }
  }

  // for code
  :not(pre) code {
    padding: 2px 3px 1px;
    line-height: 1;
    color: #e01e5a;
    background-color: var(--background-code);
    border: 1px solid var(--background-code-border);
    border-radius: 3px;
  }

  ul,
  ol {
    padding-left: 40px;
  }

  $colors: (
    'main-color': var(--main-color),
    'sub-color': var(--sub-color),
    'accent-color': var(--accent-color),
    'white': var(--white),
    'black': var(--black),
    'grey': var(--grey)
  );

  @each $name, $color in $colors {
    &.text-#{$name},
    .text-#{$name} {
      color: $color !important;
    }
    &.bg-#{$name},
    .bg-#{$name} {
      background-color: $color !important;
    }
  }

  $display: block, inline, inline-block, inline-table, flex, contents, grid,
    ruby, list-item, none, inherit, table, table-caption, table-cell,
    table-column, table-column-group, table-footer-group, table-header-group,
    table-row, table-row-group;

  @each $i in $display {
    &.d-#{$i},
    .d-#{$i} {
      display: $i;
    }
  }

  $flex-direction: row, column;

  @each $i in $flex-direction {
    &.flex-#{$i},
    .flex-#{$i} {
      flex-direction: $i;
    }
  }

  $flex-wrap: wrap, no-wrap;

  @each $i in $flex-wrap {
    &.flex-#{$i},
    .flex-#{$i} {
      flex-wrap: $i;
    }
  }

  $justify: center, start, end, flex-start, flex-end, left, right, normal,
    space-between, space-around, space-evenly, stretch, inherit, initial, revert,
    unset;

  @each $i in $justify {
    &.justify-#{$i},
    .justify-#{$i} {
      justify-content: $i;
    }
  }

  $align: center, start, end, flex-start, flex-end, baseline, normal, stretch,
    inherit, initial, revert, unset;

  @each $i in $align {
    &.align-#{$i},
    .align-#{$i} {
      align-items: $i;
    }
  }

  $text-align: center, start, end, left, right, justify, inherit, initial,
    revert, unset;

  @each $i in $text-align {
    &.text-#{$i},
    .text-#{$i} {
      text-align: $i;
    }
  }

  $word-break: break-word, break-all, keep-all, normal, unset;

  @each $i in $word-break {
    @if $i == break-word {
      &.word-break,
      .word-break {
        word-break: break-word;
      }
    } @else if $i == break-all {
      &.word-break-all,
      .word-break-all {
        word-break: break-all;
      }
    } @else {
      &.word-break-#{$i},
      .word-break-#{$i} {
        word-break: $i;
      }
    }
  }

  $white-space: wrap, nowrap, break-spaces, normal, pre, pre-line, pre-wrap,
    unset;

  @each $i in $white-space {
    &.white-space-#{$i},
    .white-space-#{$i} {
      white-space: $i;
    }
  }

  $text-overflow: ellipsis, clip, unset;

  @each $i in $text-overflow {
    &.text-overflow-#{$i},
    .text-overflow-#{$i} {
      text-overflow: $i;
    }
  }

  $mix-blend-mode: normal, luminosity, screen, unset;

  @each $i in $mix-blend-mode {
    &.mix-blend-#{$i},
    .mix-blend-#{$i} {
      mix-blend-mode: $i;
    }
  }

  $line-height: (
    'xs': 1,
    'sm': 1.15,
    'md': 1.2,
    'lg': 1.5,
    'xl': 1.8
  );

  @each $k, $v in $line-height {
    &.line-height-#{$k},
    .line-height-#{$k} {
      line-height: $v !important;
    }
  }

  @for $i from 0 through 100 {
    &.w-#{$i},
    .w-#{$i} {
      width: $i * 1% !important;
    }
    &.h-#{$i},
    .h-#{$i} {
      height: $i * 1% !important;
    }
  }

  @for $i from 0 through 200 {
    &.top-#{$i},
    .top-#{$i} {
      top: $i * 1px;
    }
    &.right-#{$i},
    .right-#{$i} {
      right: $i * 1px;
    }
    &.left-#{$i},
    .left-#{$i} {
      left: $i * 1px;
    }
    &.bottom-#{$i},
    .bottom-#{$i} {
      bottom: $i * 1px;
    }
    &.top-n#{$i},
    .top-n#{$i} {
      top: $i * -1px;
    }
    &.right-n#{$i},
    .right-n#{$i} {
      right: $i * -1px;
    }
    &.left-n#{$i},
    .left-n#{$i} {
      left: $i * -1px;
    }
    &.bottom-n#{$i},
    .bottom-n#{$i} {
      bottom: $i * -1px;
    }
  }

  $vertical-align: top, middle, bottom, baseline, revert, sub, super, text-top,
    text-bottom, inherit, initial, unset;

  @each $i in $vertical-align {
    &.vertical-#{$i},
    .vertical-#{$i} {
      vertical-align: $i !important;
    }
  }

  $box-sizing: border-box, content-box, inherit, initial, revert, unset;

  @each $i in $box-sizing {
    &.box-sizing-#{$i},
    .box-sizing-#{$i} {
      box-sizing: $i;
    }
  }

  &.index-section {
    ul,
    ol {
      margin-top: 8px;
    }

    li {
      padding-left: 5px;
      font-size: 24px;
      line-height: 1.5;
      list-style-type: none;

      strong {
        display: inline-block;
        margin-left: 12px;
        font-weight: 400;
      }

      li {
        font-size: 20px;

        li {
          font-size: 16px;
        }
      }

      &:is(ul > li) {
        list-style: inside disc;

        &::marker {
          margin-right: 20px;
        }
      }
    }

    ol {
      counter-reset: number 0;

      &:not(:is(ol ol))::before {
        display: block;
        width: 100%;
        min-width: 450px;
        margin-bottom: 20px;
        font-size: 24px;
        content: '目次';
        border-bottom: 2px solid white;
      }

      li:is(ol > li) {
        &::before {
          display: inline-block;
          min-width: 20px;
          margin-right: 20px;
          font-family: 'Roboto Condensed', sans-serif;
          color: var(--accent-color);
          content: counter(number, decimal-leading-zero);
          counter-increment: number 1;
        }

        ol {
          counter-reset: unset;

          li {
            &::before {
              display: none;
            }

            &::marker {
              margin-right: 8px;
              color: var(--accent-color);
            }
          }

          > li {
            list-style: upper-roman inside;

            ol {
              > li {
                list-style: lower-roman inside;
              }
            }
          }
        }
      }
    }
  }

  &.invert {
    --h1-color: var(--white);
    --h2-color: var(--white);
    --h3-color: var(--white);
    --h4-color: var(--white);
    --h5-color: var(--white);
    --h6-color: var(--white);
    --heading-strong-color: var(--white);
    --header-footer-color: var(--white);
    --text-color: var(--white);
    --background-theme: var(--white);
  }

  &.thesis-footer {
    font-family: 'BIZ UDPGothic', Arial, 'Hiragino Kaku Gothic ProN',
      'Hiragino Sans', Meiryo, sans-serif;

    > blockquote {
      position: absolute;
      bottom: 20px;
      width: 100%;
      max-width: 90%;
      padding: 4px 12px 0;
      font-size: 60%;
      border-top: 0.1em dashed #555;
      border-left: none;

      blockquote {
        display: none;
      }
    }

    > blockquote::before {
      content: '';
    }

    > blockquote::after {
      content: '';
    }

    footer {
      display: none;
    }
  }
}
